clear;clc;figure = figure;frame = 120;time = 0;ball_sceond_term = 0.5;ball_term = frame * ball_sceond_term;x_max = 100y_max = 200axes = axes('color', 'white', 'XLim',[0 x_max], 'YLim',[0 y_max], #Lim은 각 축의 범위'PlotBoxAspectRatio', [0.6 1 1], 'Position',[0 0.04 1 0.95]);     #PlotBoxAspectRatio 은 각 축의 상대적 길이x = 20;y = 50;global size;size = 30;monster = rectangle('Position',[60 160 20 20], 'FaceColor', [0 .5 .5]);brick1 = rectangle('Position',[60 100 30 10]);global st_x;st_x = 50;global st_y;st_y = 20;global ballInfo;function rx = replaceX(x)  rx=x+50.0;endfunction ry = replaceY(y)  ry=y;endfunction [x, y] = nowBallPosition(ballInfo)  x = ballInfo.x + ballInfo.ox;  y = ballInfo.y + ballInfo.oy;endfunction  function ballInfo = ballStruct(y, x, w, oy, ox, d,  ball)   ballInfo = struct('y', y, 'x', x, 'w', w, 'oy', oy, 'ox', ox, 'd', d, 'ball', ball);endfunctionfunction [newY, newX] = nextPosition(ballInfo)   newX = ballInfo.x + ballInfo.d;   newY = ballInfo.w * newX;endfunctionfunction result = newOPoint(p, o)  result = p + o;endfunctionfunction result = collision()  global ballInfo;  global size;    result = false;    [x, y] = nowBallPosition(ballInfo);    if x < -50 || x > 50        ballInfo.d = -1*ballInfo.d;        ballInfo.w = -1*ballInfo.w        ballInfo.ox = newOPoint(ballInfo.x, ballInfo.ox)        ballInfo.oy = newOPoint(ballInfo.y, ballInfo.oy)        ballInfo.x = 0;        ballInfo.y = 0;        result = true;        return;    end    if y < 0 || y > 200        ballInfo.w = -ballInfo.w        ballInfo.ox = newOPoint(ballInfo.x, ballInfo.ox)        ballInfo.oy = newOPoint(ballInfo.y, ballInfo.oy)        ballInfo.x = 0;        ballInfo.y = 0;        result = true;        return;    endendfunctionfunction result = monsterCollision()  global ballInfo;  global size;    result = false;    [x, y] = nowBallPosition(ballInfo);    xx = replaceX(x);    yy = replaceY(y);    minx = 60 - size/10;    maxx = 80 + size/10;    miny = 160 - size/10;    maxy = 180 + size/10;    if xx >= minx && xx <=maxx && yy >= miny && yy <= maxy        print("Collision!")        result = true;        return    endendfunctionball = line(replaceX(0), replaceY(0),'marker','.','markersize', size);while true ## decicde w value    w = -2;   d = -1;   ballInfo = ballStruct(0, 0, w, 0, 0, d, ball);  breakendwhile true    [newY, newX] = nextPosition(ballInfo);     ballInfo.y = newY;    ballInfo.x = newX;    if monsterCollision()        break    endif    if collision()        [newY, newX] = nextPosition(ballInfo);         ballInfo.y = newY;        ballInfo.x = newX;    endif    [nx, ny] = nowBallPosition(ballInfo);    set(ballInfo.ball, 'XData', replaceX(nx), 'YData', replaceY(ny));    pause(1/frame);end